//插值多项式
#include <iostream>
#include <cstring>
#include <cmath> 
using namespace std;
int n;
double x[100] = {};
double y[100] = {};
double a[100] = {};
double temp1[100] = {};
double temp2[100] = {};
void baseFunction(int);
void mul(double);
void cal()
{
	for (int i=0; i<=n; i++)
	{
		memset(temp1, 0, sizeof(temp1));
		baseFunction(i);
		for (int j=0; j<=n; j++)
		{
			a[j] += y[i] * temp1[j];
		}
	}
}

void baseFunction(int k)
{
	double down = 1;
	int flag = 1;
	for (int i=0; i<=n; i++) //分母 
	{
		if (i == k)
			continue;
		down *= (x[k] - x[i]);
	}
	for (int i=0; i<=n; i++) //分子 
	{
		if (i == k)
			continue;
		if (flag)
		{
			flag = 0;
			temp1[0] = -x[i];
			temp1[1] = 1;
		}
		else
			mul(x[i]);
	}
	for (int i=0; i<=n; i++)
	{
		temp1[i] /= down;
	}
}

void mul(double xi)
{
	memset(temp2, 0, sizeof(temp2));
	for (int i=0; i<=n; i++)
	{
		if (i == 0)
			temp2[i] = temp1[i] * (-xi);
		else
			temp2[i] = temp1[i] * (-xi) + temp1[i-1];
	}
	for (int i=0; i<=n; i++)
	{
		temp1[i] = temp2[i];
	}
}

void print()
{
	for (int i=n; i>=0; i--)
	{
		if (i == n)
			cout << a[i];
		else
		{
			if (fabs(a[i]) > 1e-6)
			{
				if (a[i] < 0)
					cout << " - " << -a[i];
				else
					cout << " + " << a[i];
			}
			else
				continue;
		}
		if (i >= 1)
			cout << "x";
		if (i >= 2)
			cout << "^" << i;
	}
}

int main()
{
	cout << "by csAugust" << endl;
	cout << "插值结点的个数是：";
	int m;
	cin >> m;
	n = m - 1;
	cout << endl << "插值节点是：";
	for (int i=0; i<=n; i++)
		cin >> x[i];
	cout << endl << "函数值是：";
	for (int i=0; i<=n; i++)
		cin >> y[i];
	cal();
	print();
	return 0;
}
